(function() {var implementors = {
"hiring_challenge_rust":[["impl&lt;'a, R: Row&gt; FromRow&lt;'a, R&gt; for <a class=\"struct\" href=\"hiring_challenge_rust/bank/payments/struct.Payment.html\" title=\"struct hiring_challenge_rust::bank::payments::Payment\">Payment</a><span class=\"where fmt-newline\">where\n    &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.69.0/std/primitive.str.html\">str</a>: ColumnIndex&lt;R&gt;,\n    <a class=\"struct\" href=\"https://docs.rs/uuid/1.3.0/uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>: Decode&lt;'a, R::Database&gt; + Type&lt;R::Database&gt;,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.69.0/std/primitive.i32.html\">i32</a>: Decode&lt;'a, R::Database&gt; + Type&lt;R::Database&gt;,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.69.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: Decode&lt;'a, R::Database&gt; + Type&lt;R::Database&gt;,\n    <a class=\"enum\" href=\"hiring_challenge_rust/bank/payments/enum.Status.html\" title=\"enum hiring_challenge_rust::bank::payments::Status\">Status</a>: Decode&lt;'a, R::Database&gt; + Type&lt;R::Database&gt;,\n    PrimitiveDateTime: Decode&lt;'a, R::Database&gt; + Type&lt;R::Database&gt;,</span>"],["impl&lt;'a, R: Row&gt; FromRow&lt;'a, R&gt; for <a class=\"struct\" href=\"hiring_challenge_rust/bank/refunds/struct.Refund.html\" title=\"struct hiring_challenge_rust::bank::refunds::Refund\">Refund</a><span class=\"where fmt-newline\">where\n    &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.69.0/std/primitive.str.html\">str</a>: ColumnIndex&lt;R&gt;,\n    <a class=\"struct\" href=\"https://docs.rs/uuid/1.3.0/uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>: Decode&lt;'a, R::Database&gt; + Type&lt;R::Database&gt;,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.69.0/std/primitive.i32.html\">i32</a>: Decode&lt;'a, R::Database&gt; + Type&lt;R::Database&gt;,\n    PrimitiveDateTime: Decode&lt;'a, R::Database&gt; + Type&lt;R::Database&gt;,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()